{"version":3,"sources":["logo.svg","utils/API.js","components/User/index.js","App.js","reportWebVitals.js","index.js"],"names":["query","axios","get","User","props","style","margin","name","age","gender","src","image","alt","email","phone","App","useState","users","setUsers","sortName","setSortName","useEffect","API","then","result","data","results","map","user","first","toString","last","picture","large","registered","console","log","className","onClick","a","b","sort","localeCompare","u","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,I,sBCMA,EACL,SAASA,GACf,OAAOC,IAAMC,IAND,0C,OCWDC,EAXF,SAACC,GACV,OACI,sBAAKC,MAAO,CAACC,OAAQ,IAArB,UACI,+BAAKF,EAAMG,KAAX,KAAmBH,EAAMI,IAAzB,KAAgCJ,EAAMK,UACtC,qBAAKC,IAAKN,EAAMO,MAAOC,IAAKR,EAAMG,OAClC,yCAAYH,EAAMS,SAClB,yCAAYT,EAAMU,aCwEfC,MA1Ef,WAEE,MAA0BC,mBAAS,CACjC,CACET,KAAM,GACNE,OAAQ,GACRE,MAAO,GACPE,MAAO,GACPC,MAAO,MANX,mBAAOG,EAAP,KAAcC,EAAd,KAYA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KA0CA,OAxCAC,qBAAU,WACRC,IAAaC,MAAK,SAAAC,GAChBN,EAASM,EAAOC,KAAKC,QAClBC,KAAI,SAAAC,GACH,MAAO,CACLrB,KAAMqB,EAAKrB,KAAKsB,MAAMC,WAAa,IAAMF,EAAKrB,KAAKwB,KAAKD,WACxDrB,OAAQmB,EAAKnB,OACbE,MAAOiB,EAAKI,QAAQC,MACpBpB,MAAOe,EAAKf,MAAMiB,WAClBhB,MAAOc,EAAKd,MACZN,IAAKoB,EAAKM,WAAW1B,IAAIsB,qBAQhC,IAoBHK,QAAQC,IAAI,SAAUnB,GAGpB,sBAAKoB,UAAU,MAAf,UACE,wBAAQC,QAfa,WACvBH,QAAQC,IAAI,uDACZlB,GAAS,SAACqB,EAAEC,GAIRL,QAAQC,IAAI,+DASd,uCAAsE,sBACtE,wBAAQE,QAAS,kBAAMlB,EAAY,SAAnC,0BACA,wBAAQkB,QAAS,kBAAMlB,EAAY,QAAnC,yBACCH,EACEwB,MAAK,SAACF,EAAEC,GACP,OAAGrB,EACMoB,EAAEpB,GAAUuB,cAAcF,EAAErB,IAE5BqB,EAAErB,GAAUuB,cAAcH,EAAEpB,OAGtCQ,KAAI,SAAAgB,GAAC,OAAI,cAAC,EAAD,CAAMpC,KAAMoC,EAAEpC,KAAME,OAAQkC,EAAElC,OAAQE,MAAOgC,EAAEhC,MAAOE,MAAO8B,EAAE9B,MAAOC,MAAO6B,EAAE7B,MAAON,IAAKmC,EAAEnC,aC/DhGoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9e41977.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\n\nconst BASEURL = 'https://randomuser.me/api/?results=50';\n// const APIKEY = \"&api_key=dc6zaTOxFJmzC&limit=20\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL);\n    }\n  };\n","import React from 'react'\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div style={{margin: 20}}>\r\n            <h4>{props.name}, {props.age}, {props.gender}</h4>\r\n            <img src={props.image} alt={props.name} />\r\n            <h6>email: {props.email}</h6>\r\n            <h6>phone: {props.phone}</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport API from './utils/API'\nimport User from './components/User/index.js'\n\nfunction App() {\n\n  const [users, setUsers] = useState([\n    {\n      name: '',\n      gender: '',\n      image: '',\n      email: '',\n      phone: ''\n    }\n  ]);\n\n  // const [sortAscending, setSortAscending] = useState(true)\n  // const [sortColumn, setSortColumn] = useState('choose your filter type')\n  const [sortName, setSortName] = useState('name')\n\n  useEffect(() => {\n    API.search().then(result => {\n      setUsers(result.data.results\n        .map(user => {\n          return {\n            name: user.name.first.toString() + ' ' + user.name.last.toString(),\n            gender: user.gender,\n            image: user.picture.large,\n            email: user.email.toString(),\n            phone: user.phone,\n            age: user.registered.age.toString()\n          }\n      })\n      // .sort((user) => user.gender)\n      // )})\n      // .sort((a,b) => a.name.localeCompare(b.name))\n      )})\n    \n  }, [])\n\n  // const handleNameSort = () => {\n  //     console.log('beep boop heres yer name sort function');\n  //     setSortName(!sortName);\n  // }\n\n  // var female = sortName.filter(e => e.type === \"female\")\n\n  const fuckThePatriarchy =() => {\n    console.log('this is where the gender would be if I had one HAHA');\n    setUsers((a,b)=> {\n      if('gender' === 'female'){\n        console.log('look at all those women');\n      } else {\n        console.log('when will you learn that your actions have consequences');\n      }\n    });\n  }\n\n  console.log('USERS:', users);\n\n  return (\n    <div className=\"App\">\n      <button onClick={fuckThePatriarchy}>I wish this button worked</button><p></p>\n      <button onClick={() => setSortName('name')}>Sort by Name</button>\n      <button onClick={() => setSortName('age')}>Sort by Age</button>\n      {users\n        .sort((a,b) => { \n          if(sortName) {\n            return a[sortName].localeCompare(b[sortName])\n          } else {\n            return b[sortName].localeCompare(a[sortName])\n          }\n        })\n        .map(u => <User name={u.name} gender={u.gender} image={u.image} email={u.email} phone={u.phone} age={u.age}/>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}